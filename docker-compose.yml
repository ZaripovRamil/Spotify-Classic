version: '3'

services:
  postgres:
    image: postgres:alpine
    hostname: postgres
    env_file:
      - SpotifyAPI/.postgres-secrets
    volumes:
      - ~/apps/Spotify/postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  admin_api:
    image: admin_api
    hostname: ${AdminApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: AdminAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${AdminApiPortHttps}:443"
    depends_on:
      - db_api
    working_dir: "/app"
  
  auth_api:
    image: auth_api
    hostname: ${AuthApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: AuthAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.postgres-secrets
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${AuthApiPortHttps}:443"
    depends_on:
      - db_api
    working_dir: "/app"
  
  chat_api:
    image: chat_api
    hostname: ${ChatApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: ChatApi/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.rabbitmq-secrets
      - SpotifyAPI/.postgres-secrets
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${ChatApiPortHttps}:443"
    depends_on:
      - db_api
    working_dir: "/app"
  
  player_api:
    image: player_api
    hostname: ${PlayerApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: PlayerAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${PlayerApiPortHttps}:443"
    depends_on:
      - db_api
    working_dir: "/app"
  
  search_api:
    image: search_api
    hostname: ${SearchApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: SearchAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.postgres-secrets
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${SearchApiPortHttps}:443"
    depends_on:
      - db_api
    working_dir: "/app"
  
  static_api:
    image: static_api
    hostname: ${StaticApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: StaticAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${StaticApiPortHttps}:443"
    volumes:
      - ./SpotifyAPI/StaticAPI/Assets:/assets
    depends_on:
      - db_api
    working_dir: "/app"
    
  chat_history_saver_service:
    image: chat_history_saver_service
    hostname: ${ChatHistorySaverServiceHostname}
    build:
      context: SpotifyAPI
      dockerfile: ChatHistorySaverService/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.rabbitmq-secrets
      - SpotifyAPI/.postgres-secrets
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    depends_on:
      - rabbitmq
    working_dir: "/app"
  
  admin_front:
    image: admin_front
    hostname: ${AdminFrontendHostname}
    build:
      context: admin-interface
      dockerfile: Dockerfile
    ports:
      - "5124:3000"
    env_file:
      - .hostnames
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - ./admin-interface/src:/app/src
    depends_on:
      - admin_api
  
  users_front:
    image: users_front
    hostname: ${UsersFrontendHostname}
    build:
      context: front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .hostnames
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - ./front/src:/app/src
    depends_on:
      - player_api
  
  rabbitmq:
    image: rabbitmq:3-alpine
    hostname: rabbitmq
    restart: always
    env_file:
      - ./SpotifyAPI/.rabbitmq-secrets
  
  minio:
    image: minio/minio:latest
    hostname: minio
    restart: always
    command: server --console-address ":9001" /data
    volumes:
      - ~/apps/Spotify/minio-data:/data
    env_file:
      - ./SpotifyAPI/.minio-secrets
    ports:
      - "9000:9000"
      - "9001:9001"
        
  mongo:
    image: mongo
    hostname: mongo
    restart: always
    volumes:
      - ~/apps/Spotify/mongo/data:/data/db
    ports:
      - "27017:27017"