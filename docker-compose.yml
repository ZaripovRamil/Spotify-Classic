version: '3'

services:
  postgres:
    image: postgres:alpine
    hostname: postgres
    env_file:
      - SpotifyAPI/.postgres-secrets
    volumes:
      - ~/apps/Spotify/postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  
  db_api:
    image: db_api
    hostname: ${DatabaseApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: DatabaseAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.postgres-secrets
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${DatabaseApiPortHttps}:${DatabaseApiPortHttps}"
    volumes:
      - ./SpotifyAPI/DatabaseAPI:/app
      - ./SpotifyAPI:/src
    depends_on:
      - postgres
  
  admin_api:
    image: admin_api
    hostname: ${AdminApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: AdminAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${AdminApiPortHttps}:${AdminApiPortHttps}"
    volumes:
      - ./SpotifyAPI/AdminAPI:/app
      - ./SpotifyAPI:/src
    depends_on:
      - db_api
  
  auth_api:
    image: auth_api
    hostname: ${AuthApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: AuthAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.postgres-secrets
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${AuthApiPortHttps}:${AuthApiPortHttps}"
    volumes:
      - ./SpotifyAPI/AuthAPI:/app
      - ./SpotifyAPI:/src
    depends_on:
      - db_api
  
  chat_api:
    image: chat_api
    hostname: ${ChatApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: ChatApi/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${ChatApiPortHttps}:${ChatApiPortHttps}"
    volumes:
      - ./SpotifyAPI/ChatApi:/app
      - ./SpotifyAPI:/src
    depends_on:
      - db_api
  
  player_api:
    image: player_api
    hostname: ${PlayerApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: PlayerAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${PlayerApiPortHttps}:${PlayerApiPortHttps}"
    volumes:
      - ./SpotifyAPI/PlayerAPI:/app
      - ./SpotifyAPI:/src
    depends_on:
      - db_api
  
  search_api:
    image: search_api
    hostname: ${SearchApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: SearchAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.postgres-secrets
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${SearchApiPortHttps}:${SearchApiPortHttps}"
    volumes:
      - ./SpotifyAPI/SearchAPI:/app
      - ./SpotifyAPI:/src
    depends_on:
      - db_api
  
  static_api:
    image: static_api
    hostname: ${StaticApiHostname}
    build:
      context: SpotifyAPI
      dockerfile: StaticAPI/Dockerfile.${RunningEnvironment}
    env_file:
      - SpotifyAPI/.secrets
      - .hostnames
      - SpotifyAPI/.kestrel-conf
    ports:
      - "${StaticApiPortHttps}:${StaticApiPortHttps}"
    volumes:
      - ./SpotifyAPI/StaticAPI/Assets:/assets
      - ./SpotifyAPI/StaticAPI:/app
      - ./SpotifyAPI:/src
    depends_on:
      - db_api
  
  admin_front:
    image: admin_front
    hostname: ${AdminFrontendHostname}
    build:
      context: admin-interface
      dockerfile: Dockerfile
    ports:
      - "5124:3000"
    env_file:
      - .hostnames
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - ./admin-interface/src:/app/src
    depends_on:
      - admin_api
  
  users_front:
    image: users_front
    hostname: ${UsersFrontendHostname}
    build:
      context: front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .hostnames
    environment:
      - WATCHPACK_POLLING=true
    volumes:
      - ./front/src:/app/src
    depends_on:
      - player_api
  
  rabbitmq:
    image: rabbitmq:3-alpine
    hostname: rabbitmq
    restart: always
    env_file:
      - ./SpotifyAPI/.rabbitmq-secrets
      - ./SpotifyAPI/.secrets
    ports:
      - "15672:15672"
      - "5672:5672"
  
  ffmpeg:
    image: jrottenberg/ffmpeg